GiD ascii format for mesh and results files is explained at
http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files

In Ascii format there are two files: 
one for the mesh(es) http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files/mesh_format-_modelnamepostmsh
and one for the results http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files/results_format-_modelnamepostres

The VELaSSCo_HbaseBasicTest is an artificial tetrahedral mesh of a unit cube, between (0, 0, 0) and (1, 1, 1) with some artificial created results.
This artifical dataset is subdivided into4 partitions:

VELaSSCo_HbaseBasicTest-part-1.post.msh and VELaSSCo_HbaseBasicTest-part-1.post.res
VELaSSCo_HbaseBasicTest-part-2.post.msh and VELaSSCo_HbaseBasicTest-part-2.post.res
VELaSSCo_HbaseBasicTest-part-3.post.msh and VELaSSCo_HbaseBasicTest-part-3.post.res
VELaSSCo_HbaseBasicTest-part-4.post.msh and VELaSSCo_HbaseBasicTest-part-4.post.res

The mesh is a single volume of around 10,000 tetrahedrons and 10 time-steps with 2 vector results.

Basically, to read the VELaSSCo_HbaseBasicTest-part-X.post files :

Meshes
======
Meshes start with following header:

       MESH "Mesh name" dimension 3 ElemType Tetrahedra Nnode 4

       dimension --> 2 or 3, dimension of the mesh: 2d or 3d
       ElemType --> one of Point, Line, Triangle, Quadrilateral, Tetrahedra, Hexahedra, Prism, Pyramid, Sphere, Circle
       Nnode --> number of nodes of the elements, for instance 4 or 10 for Tetrahedra, or 3 or 6 for Triangle
		 ( check http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files/mesh_format-_modelnamepostmsh)
followed by the coordinates / end coordinates section:
	 node_id coordinates_x coordinates_y coordinates_z_optional
		 node_id is a global id of the node
		 coordinates can be specified in the first coordinates block for all meshes or each mesh defines their own
followed by the elements / end elements section:
	 element_id node_1 ... node_Nnode group_id_optional
		    element_id is a global id of the element
		    node_1 ... node_Nnode depends on the element connectivity
			   for order of nodes check http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files/mesh_format-_modelnamepostmsh

any comment line begins with the character '#'.
Optionally, between the the MESH header and the coordinates section, the color of the mesh can be specified with:
	    # Color red green blue
	    color components are between 0.0 and 1.0

the first line with 
    # encoding utf-8
is needed when using non-ascii character for mesh names, like accents or other special symbols.

Results
=======
Results file start with this header in the first line:
	GiD Post Results File 1.0

	# encoding utf-8
	as before, it is needed when using non-ascii characters in strings

Results definitions start with following header:

	Result "Result name" "Analysis name" StepValue ResultType Location GP_location

	StepValue --> floating point number which defined the step value inside the analysis
	ResultType --> type of result, one of: SCalar, Vector, Matrix, PlainDeformationMatrix, MainMatrix, LocalAxes, ComplexScalar, ComplexVector
		   ( check http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files/results_format-_modelnamepostres/result)
	Location --> OnNodes or OnGaussPoints tells GiD whether the results are defined on the nodes of the mesh or on gauss points.
	GP_location --> needed if Location == OnGaussPoints defines which gauss points are used to define location of results, can be
		    one of the GiD standard gauss points of gid: GP_TRIANGLE_1, GP_TRIANGLE_3, GP_TETRAHEDRA_1, GP_TETRAHEDRA_4, etc.
		    or the name of the gauss points defined by the user using the "GaussPoint header"
		    ( for further details check http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files/results_format-_modelnamepostres/gauss_points)

followed with some optional parameters, 
	 check http://www.gidhome.com/component/manual/customizationmanual/postprocess_data_files/results_format-_modelnamepostres/result
followed by the Values / end values section:
	 node_id value_1 ... value_N    --> if Result is located OnNodes, value_N depending on the result type
	 element_id value_gp_1_1 ... value_gp_1_N --> value_gp_1_N with N depending on the result type
		    ...
		    value_gp_M_1 ... value_gp_M_N --> value_gp_M_N with M depending on the Gauss Point definition
	 element_id+1 value_gp_1_...
		      ...
		      value_gp_M_...
		   
		   