<?xml version="1.0" encoding="UTF-8"?>
<resourceDoc><classDocs><classDoc><className>velassco.datainjection.bean.ResponseXML</className><commentText><![CDATA[]]></commentText></classDoc><classDoc><className>velassco.datainjection.bean.ResponseXML.RowXML</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getCells</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setCells</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setCell</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.bean.ResponseXML.CellXML</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getColumn</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setColumn</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getTimestamp</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setTimestamp</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getValue</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setValue</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.bean.Response</className><commentText><![CDATA[]]></commentText></classDoc><classDoc><className>velassco.datainjection.bean.Response.Row</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getCells</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setCells</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.bean.Response.Cell</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getColumn</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setColumn</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getTimestamp</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setTimestamp</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>get$</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>set$</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.bean.OutputPartXML</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getSimulId</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setSimulId</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getPartNumber</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setPartNumber</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getRaw_data</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setRaw_data</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.bean.MessageData</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>get_global_id</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>set_global_id</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.bean.MessageBean</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>get_timeExec</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>set_timeExec</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>get_messageState</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>set_messageState</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>get_messageData</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>set_messageData</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.bean.CellOutClass</className><commentText><![CDATA[]]></commentText></classDoc><classDoc><className>velassco.datainjection.resources.SimulationManager</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>sendFlumeEvent</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>sendFlumeEvent</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getMD5</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>hexStringToByteArray</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getArrayRowkey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getUUID</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>sendSimulData</methodName><commentText><![CDATA[This method allows data insertion on HBase database given the simulation name and analysis type as parameters]]></commentText><responseDoc><returnDoc>A message with status of data insertion</returnDoc></responseDoc><paramDocs><paramDoc><paramName>simulationName</paramName><commentText><![CDATA[Type of simulation input data (DEM, FEM, etc)]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>simulationName</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc><paramDoc><paramName>analysisName</paramName><commentText><![CDATA[Name of the simulation data file]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>analysisName</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc><paramDoc><paramName>partitionId</paramName><commentText><![CDATA[Identifier of simulation part]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>partitionId</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc><paramDoc><paramName>type</paramName><commentText><![CDATA[Type of coordinate set (only for DEM)]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>type</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc></paramDocs></methodDoc><methodDoc><methodName>runETLProcess</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getDataFromHBase</methodName><commentText><![CDATA[This method is used to query the HBase table via REST API service]]></commentText><responseDoc><returnDoc>XML query response</returnDoc></responseDoc><paramDocs><paramDoc><paramName>rowkey</paramName><commentText><![CDATA[]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>rowkey</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc><paramDoc><paramName>database</paramName><commentText><![CDATA[]]></commentText><annotationDocs><annotationDoc><annotationTypeName>javax.ws.rs.QueryParam</annotationTypeName><attributes><attribute><name>value</name><value>database</value></attribute></attributes></annotationDoc></annotationDocs></paramDoc></paramDocs></methodDoc><methodDoc><methodName>decode</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>encode</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>convertJSON2XML</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.resources.FEMSimulation</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>runETLProcess</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>readFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>readMeshFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>readResultFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertValues</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.resources.DEMSimulationHBase</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>main</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>createMeshConnectivityFromFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>createMeshPointsFromFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>createP2PContactsFromFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>createParticlesFromFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>ingest_mesh_points_data</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>ingest_mesh_connectivity_data</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>ingest_p3w_data</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>ingest_p3c_data</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>ingest_p3p_data</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.resources.DEMSimulationEntities</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>runETLProcess</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>readFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertMetadata_C</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertQualifierValuesMetadataM</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertMetadata_M</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertMetadata_G</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertMetadata_R</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertSimulationData_CM</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>insertSimulationData_R</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.resources.DEMSimulation</className><commentText><![CDATA[]]></commentText></classDoc><classDoc><className>velassco.datainjection.util.VPHConstants</className><commentText><![CDATA[]]></commentText></classDoc><classDoc><className>velassco.datainjection.util.SolrManager</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getInstance</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>initSolrIndex</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.SimpleRowKeyGenerator</className><commentText><![CDATA[Utility class for users to generate their own keys. Any key can be used,
 this is just a utility that provides a set of simple keys.]]></commentText><methodDocs><methodDoc><methodName>getUUIDKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getRandomKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getTimestampKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getNanoTimestampKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.Json2Map</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>main</methodName><commentText><![CDATA[]]></commentText><responseDoc/><paramDocs><paramDoc><paramName>args</paramName><commentText><![CDATA[]]></commentText></paramDoc></paramDocs></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.HBaseManagerBinary</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getConfiguration</methodName><commentText><![CDATA[Create a new table]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>creatTable</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>deleteTable</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>addRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>addRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>addBytesRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>addBytesRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>addBytesRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>addIntegerRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>delRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getColumnQualifier</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getOneRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getOneRecordDoubles</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getAllRecord</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.HBaseManager</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>getInstance</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>loadTableDefinition</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>queryTable</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>createTable</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.DataInjectorManager</className><commentText><![CDATA[Data Injector Manager is in charge of handling the Data Injector processes receiving the input file 
 and assigning every portion into uniques endpoints and ports]]></commentText><methodDocs><methodDoc><methodName>getInstance</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>create</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>seekFreePort</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>splitInputFile</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.DataInjectorLoadBalancer</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>balacerLoad</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>sendData</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.flume.agent.FlumeInterceptor</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>intercept</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>intercept</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>close</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>initialize</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.flume.agent.FlumeHDFSAgent</className><commentText><![CDATA[]]></commentText></classDoc><classDoc><className>velassco.datainjection.util.flume.agent.FlumeHBaseAgent</className><commentText><![CDATA[]]></commentText></classDoc><classDoc><className>velassco.datainjection.util.flume.agent.FlumeAVROManager</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>sendEventListToFlume</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>sendDataToFlume</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>cleanUp</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>sendFileToFlume</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>writeFileToHDFS</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.hbase.serializer.SplittingSerializer</className><commentText><![CDATA[A serializer for the AsyncHBaseSink, which splits the event body into
 multiple columns and inserts them into a row whose key is available in
 the headers]]></commentText><methodDocs><methodDoc><methodName>initialize</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>setEvent</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getActions</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getIncrements</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>cleanUp</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.hbase.serializer.SimpleHBaseEventSerializer</className><commentText><![CDATA[A simple serializer that returns puts from an event, by writing the event
 body into it. The headers are discarded. It also updates a row in hbase
 which acts as an event counter.

 Takes optional parameters:<p>
 <tt>rowPrefix:</tt> The prefix to be used. Default: <i>default</i><p>
 <tt>incrementRow</tt> The row to increment. Default: <i>incRow</i><p>
 <tt>suffix:</tt> <i>uuid/random/timestamp.</i>Default: <i>uuid</i><p>

 Mandatory parameters: <p>
 <tt>cf:</tt>Column family.<p>
 Components that have no defaults and will not be used if null:
 <tt>payloadColumn:</tt> Which column to put payload in. If it is null,
 event data will not be written.<p>
 <tt>incColumn:</tt> Which column to increment. Null means no column is
 incremented.]]></commentText><methodDocs><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>initialize</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getActions</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getIncrements</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>close</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.hbase.serializer.SimpleHBaseEventSerializer.KeyType</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>values</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>valueOf</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.hbase.serializer.RegexHbaseEventSerializer</className><commentText><![CDATA[An {@link HbaseEventSerializer} which parses columns based on a supplied
 regular expression and column name list.
 
 Note that if the regular expression does not return the correct number of
 groups for a particular event, or it does not correctly match an event, the
 event is silently dropped.
 
 Row keys for each event consist of a timestamp concatenated with an
 identifier which enforces uniqueness of keys across flume agents.
 
 See static constant variables for configuration options.]]></commentText><methodDocs><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>initialize</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getRowKey</methodName><commentText><![CDATA[Returns a row-key with the following format: [time in millis]-[random
 key]-[nonce]]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getRowKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getMD5</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>hexStringToByteArray</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getArrayRowkey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getActions</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getIncrements</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>close</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.hbase.serializer.MultiCFRegexHbaseEventSerializer</className><commentText><![CDATA[]]></commentText><methodDocs><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>configure</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>initialize</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getRowKey</methodName><commentText><![CDATA[Returns a row-key with the following format: [time in millis]-[random
 key]-[nonce]]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getRowKey</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getActions</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getIncrements</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>close</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.hbase.serializer.HbaseEventSerializer</className><commentText><![CDATA[Interface for an event serializer which serializes the headers and body of an
 event to write them to hbase. This is configurable, so any config params
 required should be taken through this. Only the column family is passed in.
 The columns should exist in the table and column family specified in the
 configuration for the HbaseSink.]]></commentText><methodDocs><methodDoc><methodName>initialize</methodName><commentText><![CDATA[Initialize the event serializer.]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>getActions</methodName><commentText><![CDATA[Get the actions that should be written out to hbase as a result of this
 event. This list is written to hbase using the HBase batch API.]]></commentText><responseDoc><returnDoc>List of {@link org.apache.hadoop.hbase.client.Row} which are
         written as such to HBase.
 
         0.92 increments do not implement Row, so this is not generic.</returnDoc></responseDoc></methodDoc><methodDoc><methodName>getIncrements</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc><methodDoc><methodName>close</methodName><commentText><![CDATA[]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc><classDoc><className>velassco.datainjection.util.hbase.serializer.AsyncHbaseEventSerializer</className><commentText><![CDATA[Interface for an event serializer which serializes the headers and body
 of an event to write them to hbase. This is configurable, so any config
 params required should be taken through this.
 The table should be valid on the column family. An implementation
 of this interface is expected by the {@linkplain AsyncHBaseSink} to serialize
 the events.]]></commentText><methodDocs><methodDoc><methodName>initialize</methodName><commentText><![CDATA[Initialize the event serializer.]]></commentText><responseDoc/><paramDocs><paramDoc><paramName>table</paramName><commentText><![CDATA[- The table the serializer should use when creating
 {@link org.hbase.async.PutRequest} or
 {@link org.hbase.async.AtomicIncrementRequest}.]]></commentText></paramDoc><paramDoc><paramName>cf</paramName><commentText><![CDATA[- The column family to be used.]]></commentText></paramDoc></paramDocs></methodDoc><methodDoc><methodName>setEvent</methodName><commentText><![CDATA[]]></commentText><responseDoc/><paramDocs><paramDoc><paramName>Event</paramName><commentText><![CDATA[to be written to HBase.]]></commentText></paramDoc></paramDocs></methodDoc><methodDoc><methodName>getActions</methodName><commentText><![CDATA[Get the actions that should be written out to hbase as a result of this
 event. This list is written to hbase.]]></commentText><responseDoc><returnDoc>List of {@link org.hbase.async.PutRequest} which
 are written as such to HBase.</returnDoc></responseDoc></methodDoc><methodDoc><methodName>getIncrements</methodName><commentText><![CDATA[Get the increments that should be made in hbase as a result of this
 event. This list is written to hbase.]]></commentText><responseDoc><returnDoc>List of {@link org.hbase.async.AtomicIncrementRequest} which
 are written as such to HBase.</returnDoc></responseDoc></methodDoc><methodDoc><methodName>cleanUp</methodName><commentText><![CDATA[Clean up any state. This will be called when the sink is being stopped.]]></commentText><responseDoc/></methodDoc></methodDocs></classDoc></classDocs></resourceDoc>
